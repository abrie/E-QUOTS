{"version":3,"sources":["components/Selector/index.js","lib/compute/index.js","lib/export/buildFilename.js","lib/export/buildEML.js","lib/export/buildHTML.js","lib/export/buildCSV.js","components/Exporter/index.js","lib/export/index.js","components/Landing/index.js","lib/loader/index.js","components/Card/index.js","App.js","serviceWorker.js","index.js"],"names":["cards","onChanged","useState","selected","setSelected","useEffect","find","card","name","handleSelection","evt","value","currentTarget","SelectorItems","map","key","onChange","computeTotals","ledger","Object","values","reduce","acc","val","undefined","buildFilename","date","extension","replace","year","getFullYear","month","getMonth","paddedMonth","length","day","getDate","paddedDay","buildEML","csvFilename","Date","template","Handlebars","compile","totalChoices","sections","choiceSet","totals","registerHelper","choice","id","buildHTML","header","section","questions","question","text","join","buildCSV","canRestore","doReset","doRestore","active","setActive","notEmpty","some","doExport","filename","data","type","blob","Blob","window","navigator","msSaveOrOpenBlob","elem","document","createElement","href","URL","createObjectURL","download","body","appendChild","click","removeChild","upload","doPrint","print","target","getElementById","createPortal","className","disabled","onClick","addIds","copy","JSON","parse","stringify","forEach","Array","from","ch","toLowerCase","filter","loadTemplate","makeLedger","setCard","setLedger","cachedLedger","setCachedLedger","handleChange","newLedger","Section","Questions","Question","choiceCount","data-count","Choices","choices","checked","htmlFor","number","title","instructions","Exporter","blankLedger","pdf","Landing","App","Templates","Card","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4af9ee96.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport default function({ cards, onChanged }) {\n  const [selected, setSelected] = useState(\"none\");\n\n  useEffect(() => {\n    onChanged(cards.find(card => `${card.name}` === selected));\n  }, [cards, selected, onChanged]);\n\n  const handleSelection = evt => {\n    const { value } = evt.currentTarget;\n    setSelected(value);\n  };\n\n  const Selector = ({ cards }) => {\n    return (\n      <select value={selected} onChange={handleSelection}>\n        <option value=\"none\">Select a card</option>\n        <SelectorItems cards={cards} />\n      </select>\n    );\n  };\n\n  const SelectorItems = ({ cards }) => {\n    return cards.map((card, key) => {\n      return (\n        <option key={key} value={card.name}>\n          {card.name}\n        </option>\n      );\n    });\n  };\n  if (cards) {\n    return <Selector cards={cards} />;\n  } else {\n    return <div>no cards</div>;\n  }\n}\n","function computeTotals({ card, ledger }) {\n  return Object.values(ledger).reduce((acc, val) => {\n    if (acc[val] === undefined) {\n      acc[val] = 1;\n    } else {\n      acc[val] = acc[val] + 1;\n    }\n    return acc;\n  }, {});\n}\n\nexport { computeTotals };\n","function buildFilename({ card, date, extension }) {\n  const name = card.name.replace(/ /gi, \"-\");\n  const year = date.getFullYear();\n  const month = `${date.getMonth() + 1}`;\n  const paddedMonth = month.length === 1 ? `0${month}` : month;\n  const day = `${date.getDate()}`;\n  const paddedDay = day.length === 1 ? `0${day}` : day;\n  return `equots-${year}-${paddedMonth}-${paddedDay}_${name}.${extension}`;\n}\n\nexport { buildFilename };\n","import { buildHTML } from \"./buildHTML\";\nimport { buildCSV } from \"./buildCSV\";\nimport { buildFilename } from \"./buildFilename\";\n\nfunction buildEML({ card, ledger }) {\n  const csvFilename = buildFilename({\n    card,\n    date: new Date(),\n    extension: \"csv\"\n  });\n\n  const eml = `\nSubject: QUOTS: ${card.name}\nX-Unsent: 1\nContent-Type: multipart/mixed; boundary=--boundary_text_string\n\nSee below for a copy of inspection results:\n\n----boundary_text_string\nContent-Type: text/html; charset=UTF-8\n\n${buildHTML({ card, ledger })}\n\n----boundary_text_string\nContent-Type: text/csv; charset=UTF-8; name=${csvFilename}\nContent-Disposition: attachment\n\n${buildCSV({ card, ledger })}\n\n----boundary_text_string--\n`;\n  return eml;\n}\n\nexport { buildEML };\n","import { computeTotals } from \"../compute\";\nimport Handlebars from \"handlebars\";\n\nfunction buildHTML({ card, ledger }) {\n  const definition = `\n  <html>\n  <head>\n    <style> td { border: 1px solid #444 } </style>\n  </head>\n  <body>\n  <table>\n  <thead>\n  <tr>\n  {{#each totalChoices}}\n  <th>\n  {{totalLabel .}}\n  </th>\n  {{/each}}\n  </tr>\n  </thead>\n  <tbody>\n  <tr>\n  {{#each totalChoices}}\n  <td>\n  {{totalValue .}}\n  </td>\n  {{/each}}\n  </tr>\n  </tbody>\n  </table>\n  {{#each card.sections}}\n  <table>\n  <thead>\n  <tr>\n    <th>{{header}}</th>\n    <th>Response</th>\n  </tr>\n  </thead>\n  <tbody>\n  {{#each questions}}\n  <tr>\n    <td>{{text}}</td>\n    <td>{{response id}}</td>\n  </tr>\n  {{/each}}\n  </tbody>\n  </table>\n  {{/each}}\n  </body>\n  </html>\n  `;\n\n  var template = Handlebars.compile(definition);\n  const totalChoices = [...card.sections[0].choiceSet, \"\"];\n  const totals = computeTotals({ card, ledger });\n\n  Handlebars.registerHelper(\"totalValue\", function(choice) {\n    const val = totals[choice];\n\n    switch (val) {\n      case undefined:\n        return 0;\n      default:\n        return val;\n    }\n  });\n\n  Handlebars.registerHelper(\"response\", function(id) {\n    return ledger[id];\n  });\n\n  Handlebars.registerHelper(\"totalLabel\", function(val) {\n    switch (val) {\n      case \"\":\n        return \"Unanswered\";\n      default:\n        return val;\n    }\n  });\n\n  const html = template({ card, totalChoices });\n\n  return html;\n}\n\nexport { buildHTML };\n","function buildCSV({ card, ledger }) {\n  const header = card.sections.reduce((acc, section) => {\n    return section.questions.reduce((acc, question) => {\n      return [...acc, `\"${question.text}\"`];\n    }, acc);\n  }, []);\n\n  const values = card.sections.reduce((acc, section) => {\n    return section.questions.reduce((acc, question) => {\n      return [...acc, ledger[question.id]];\n    }, acc);\n  }, []);\n\n  return [header.join(\",\"), values.join(\",\")].join(\"\\n\");\n}\n\nexport { buildCSV };\n","import React, { useEffect, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { upload, buildEML, buildFilename } from \"../../lib/export\";\nimport \"./style.css\";\n\nexport default function({ card, ledger, canRestore, doReset, doRestore }) {\n  const [active, setActive] = useState(false);\n\n  useEffect(() => {\n    const notEmpty = Object.values(ledger).some(val => val);\n    setActive(notEmpty);\n  }, [ledger]);\n\n  const doExport = evt => {\n    const date = new Date();\n    const extension = \"eml\";\n    const filename = buildFilename({ card, date, extension });\n    const type = \"text/plain\";\n    const data = buildEML({ card, ledger });\n    upload({ data, filename, type });\n  };\n\n  const doPrint = evt => {\n    window.print();\n  };\n\n  const RestoreMode = () => {\n    return (\n      <div className=\"controls\">\n        <button disabled={true} onClick={doExport}>\n          Email\n        </button>\n        <button disabled={true} onClick={doPrint}>\n          Print\n        </button>\n        <button className=\"normal\" onClick={() => doRestore()}>\n          Undo\n        </button>\n      </div>\n    );\n  };\n\n  const NormalMode = () => {\n    return (\n      <div className=\"controls\">\n        <button disabled={false} className=\"normal\" onClick={doExport}>\n          Email\n        </button>\n        <button disabled={false} className=\"normal\" onClick={doPrint}>\n          Print\n        </button>\n        <button disabled={false} className=\"warning\" onClick={() => doReset()}>\n          Reset\n        </button>\n      </div>\n    );\n  };\n\n  const EmptyMode = () => {\n    return (\n      <div className=\"controls\">\n        <button disabled={true} onClick={doExport}>\n          Email\n        </button>\n        <button disabled={true} onClick={doPrint}>\n          Print\n        </button>\n        <button disabled={true} onClick={() => doReset()}>\n          reset\n        </button>\n      </div>\n    );\n  };\n\n  const target = document.getElementById(\"portalme\");\n\n  if (canRestore) {\n    return createPortal(<RestoreMode />, target);\n  } else if (active) {\n    return createPortal(<NormalMode />, target);\n  } else {\n    return createPortal(<EmptyMode />, target);\n  }\n}\n","import { buildEML } from \"./buildEML\";\nimport { buildFilename } from \"./buildFilename\";\n\nfunction upload({ data, filename, type }) {\n  const blob = new Blob([data], { type });\n\n  if (window.navigator.msSaveOrOpenBlob) {\n    window.navigator.msSaveOrOpenBlob(blob, filename);\n  } else {\n    var elem = window.document.createElement(\"a\");\n    elem.href = window.URL.createObjectURL(blob);\n    elem.download = filename;\n    document.body.appendChild(elem);\n    elem.click();\n    document.body.removeChild(elem);\n  }\n}\n\nexport { upload, buildEML, buildFilename };\n","import React from \"react\";\nimport \"./style.css\";\n\nexport default function() {\n  return (\n    <div className=\"landing\">\n      <h1 className=\"title\">Infection Control</h1>\n      <p>\n        Welcome to this implementation of the CDC's{\" \"}\n        <a href=\"https://www.cdc.gov/infectioncontrol/tools/quots.html\">\n          Quick Check Tools (QUOTS)\n        </a>\n        .\n      </p>\n      <p>\n        Use this tool to measure and encourage best practices in clinical\n        settings. It will help limit the spread of infectious agents.\n      </p>\n      <p>To get started, select a card from the header menu above.</p>\n      <p>\n        For technical information, see the&nbsp;\n        <a href=\"https://github.com/abrie/e-quots\">source code on Github.</a>\n      </p>\n    </div>\n  );\n}\n","function addIds(template) {\n  const toId = text =>\n    Array.from(text)\n      .map(ch => ch.toLowerCase())\n      .filter(ch => ch >= \"a\" && ch <= \"z\")\n      .join(\"\");\n\n  // Create a 'deep copy'\n  const copy = JSON.parse(JSON.stringify(template));\n\n  // Add id fields to the deep copy.\n  copy.sections.forEach(section => {\n    section.id = toId(section.header);\n    section.questions.forEach(question => {\n      question.id = Array.from(question.text)\n        .map(ch => ch.toLowerCase())\n        .filter(ch => ch >= \"a\" && ch <= \"z\")\n        .join(\"\");\n    });\n  });\n\n  return copy;\n}\n\nfunction makeLedger(template) {\n  const ledger = {};\n  template.sections.forEach(section => {\n    section.questions.forEach(question => {\n      ledger[question.id] = \"\";\n    });\n  });\n  return ledger;\n}\n\nfunction loadTemplate(template) {\n  const card = addIds(template);\n  const ledger = makeLedger(card);\n\n  return {\n    card,\n    ledger\n  };\n}\n\nexport { loadTemplate };\n","import React, { useState, useEffect } from \"react\";\nimport Exporter from \"../Exporter\";\nimport Landing from \"../Landing\";\nimport { computeTotals } from \"../../lib/compute\";\nimport { loadTemplate } from \"../../lib/loader\";\nimport \"./style.css\";\n\nexport default function({ template }) {\n  const [card, setCard] = useState(null);\n  const [ledger, setLedger] = useState(null);\n  const [cachedLedger, setCachedLedger] = useState(null);\n\n  useEffect(() => {\n    if (template) {\n      const { card, ledger } = loadTemplate(template);\n      setCard(card);\n      setLedger(ledger);\n      setCachedLedger(null);\n    } else {\n      setCard(null);\n      setLedger(null);\n      setCachedLedger(null);\n    }\n  }, [template]);\n\n  const resetLedger = () => {\n    setCachedLedger(ledger);\n    const { ledger: blankLedger } = loadTemplate(template);\n    setLedger(blankLedger);\n  };\n\n  const restoreLedger = () => {\n    setLedger(cachedLedger);\n    setCachedLedger(null);\n  };\n\n  const handleChange = evt => {\n    const { name, value } = evt.currentTarget;\n    const newLedger = { ...ledger, [name]: value };\n    setLedger(newLedger);\n    setCachedLedger(null);\n  };\n\n  const Sections = ({ sections }) => {\n    return sections.map((section, key) => {\n      return <Section section={section} key={key} />;\n    });\n  };\n\n  const Totals = ({ card, ledger }) => {\n    const choiceSet = card.sections[0].choiceSet;\n    const totals = computeTotals({ card, ledger });\n\n    return (\n      <div className=\"total\">\n        <div className=\"totalText\">Total</div>\n        <div className=\"totalChoices\" data-count={choiceSet.length}>\n          {choiceSet.map((choice, key) => {\n            return (\n              <div className=\"totalChoice\" key={key}>\n                {totals[choice]}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  };\n\n  const Section = ({ section }) => {\n    return (\n      <div className=\"section\">\n        <div className=\"sectionHeader\">{section.header}</div>\n        <div className=\"sectionQuestions\">\n          <Questions section={section} />\n        </div>\n      </div>\n    );\n  };\n\n  const Questions = ({ section }) => {\n    return section.questions.map((question, key) => {\n      return (\n        <Question\n          question={question}\n          choiceCount={section.choiceSet.length}\n          key={key}\n        />\n      );\n    });\n  };\n\n  const Question = ({ question, choiceCount }) => {\n    return (\n      <div className=\"question\">\n        <div className=\"questionText\"> {question.text}</div>\n        <div className=\"questionChoices\" data-count={choiceCount}>\n          <Choices question={question} />\n        </div>\n      </div>\n    );\n  };\n\n  const Choices = ({ question }) => {\n    return question.choices.map((choice, key) => {\n      const id = `${question.id}-${choice}`;\n      return (\n        <div className=\"questionChoice\" key={key}>\n          <input\n            type=\"radio\"\n            id={id}\n            name={question.id}\n            value={choice}\n            checked={ledger[question.id] === choice}\n            onChange={handleChange}\n          />\n          <label htmlFor={id}>{choice}</label>\n        </div>\n      );\n    });\n  };\n\n  const Instructions = ({ text }) => {\n    return <div className=\"instructions\">{text}</div>;\n  };\n\n  const Reference = ({ href }) => {\n    return (\n      <div className=\"reference\">\n        <a href={card.pdf}>Source PDF</a>\n      </div>\n    );\n  };\n\n  const Title = ({ text, number }) => {\n    return (\n      <div className=\"title\">\n        <div className=\"titleText\">{text}</div>\n        <div className=\"titleNumber\">{number}</div>\n      </div>\n    );\n  };\n\n  if (card) {\n    return (\n      <>\n        <Title text={card.title} number={card.number} />\n        <Instructions text={card.instructions} />\n        <Sections sections={card.sections} />\n        <Totals card={card} ledger={ledger} />\n        <Exporter\n          card={card}\n          ledger={ledger}\n          canRestore={cachedLedger !== null}\n          doReset={resetLedger}\n          doRestore={restoreLedger}\n        />\n        <Reference href={card.pdf} />\n      </>\n    );\n  } else {\n    return <Landing />;\n  }\n}\n","import React, { useState } from \"react\";\nimport Selector from \"./components/Selector\";\nimport Card from \"./components/Card\";\nimport Templates from \"./data/Cards\";\nimport \"./App.css\";\n\nfunction App() {\n  const [card, setCard] = useState(null);\n\n  return (\n    <div className=\"app\">\n      <div className=\"header\">\n        <Selector cards={Templates.cards} onChanged={setCard} />\n        <div id=\"portalme\"></div>\n      </div>\n      <div className=\"card\">\n        <Card template={card} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}