{"version":3,"sources":["components/Landing/index.js","lib/compute/index.js","components/Card/index.js","lib/export/buildFilename.js","lib/export/buildEML.js","lib/export/buildHTML.js","lib/export/buildCSV.js","components/Exporter/index.js","lib/export/index.js","components/Selector/index.js","lib/loader/index.js","serviceWorker.js","index.js","App.js"],"names":["className","href","computeTotals","card","ledger","Object","values","reduce","acc","val","undefined","DispatchContext","React","createContext","Observable","handleChange","useContext","observable","type","name","value","onChange","Sections","sections","map","section","key","Totals","choiceSet","totals","data-count","length","choice","Section","header","Questions","questions","question","choiceCount","Question","text","Choices","choices","id","checked","htmlFor","Instructions","instructions","Reference","Title","title","number","state","Landing","Provider","buildFilename","date","extension","replace","year","getFullYear","month","getMonth","paddedMonth","day","getDate","paddedDay","buildEML","csvFilename","Date","template","Handlebars","compile","totalChoices","registerHelper","buildHTML","join","buildCSV","canRestore","doReset","doRestore","useState","active","setActive","useEffect","notEmpty","some","doExport","evt","filename","data","blob","Blob","window","navigator","msSaveOrOpenBlob","elem","document","createElement","URL","createObjectURL","download","body","appendChild","click","removeChild","upload","doPrint","print","disabled","onClick","cards","onChanged","selected","setSelected","find","handleSelection","currentTarget","SelectorItems","addIds","copy","JSON","parse","stringify","forEach","Array","from","ch","toLowerCase","filter","loadTemplate","makeLedger","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","setTemplate","useReducer","action","payload","cache","dispatch","Templates","Exporter","Card","getElementById","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ea8d238e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nexport default function() {\n  return (\n    <div className=\"landing\">\n      <h1 className=\"title\">Infection Control</h1>\n      <p>\n        Welcome to this implementation of the CDC's{\" \"}\n        <a href=\"https://www.cdc.gov/infectioncontrol/tools/quots.html\">\n          Quick Check Tools (QUOTS)\n        </a>\n        .\n      </p>\n      <p>\n        Use this tool to measure and encourage best practices in clinical\n        settings. It will help limit the spread of infectious agents.\n      </p>\n      <p>To get started, select a card from the header menu above.</p>\n      <p>\n        For technical information, see the&nbsp;\n        <a href=\"https://github.com/abrie/e-quots\">source code on Github.</a>\n      </p>\n    </div>\n  );\n}\n","function computeTotals({ card, ledger }) {\n  return Object.values(ledger).reduce((acc, val) => {\n    if (acc[val] === undefined) {\n      acc[val] = 1;\n    } else {\n      acc[val] = acc[val] + 1;\n    }\n    return acc;\n  }, {});\n}\n\nexport { computeTotals };\n","import React, { useContext } from \"react\";\nimport Landing from \"../Landing\";\nimport { computeTotals } from \"../../lib/compute\";\nimport \"./style.css\";\n\nconst DispatchContext = React.createContext(null);\n\nconst Observable = ({ card, ledger }) => {\n  const handleChange = useContext(DispatchContext);\n  return (\n    <div className=\"observable\">\n      <div className=\"observableLabel\">{card.observable}</div>\n      <div className=\"observableInput\">\n        <input\n          type=\"text\"\n          name=\"observable\"\n          value={ledger.observable}\n          onChange={handleChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst Sections = ({ card, ledger }) => {\n  return card.sections.map((section, key) => {\n    return <Section key={key} section={section} ledger={ledger} />;\n  });\n};\n\nconst Totals = ({ card, ledger }) => {\n  const choiceSet = card.sections[0].choiceSet;\n  const totals = computeTotals({ card, ledger });\n\n  return (\n    <div className=\"total\">\n      <div className=\"totalLabel\">Total</div>\n      <div className=\"totalChoices\" data-count={choiceSet.length}>\n        {choiceSet.map((choice, key) => {\n          return (\n            <div className=\"totalChoice\" key={key}>\n              {totals[choice]}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst Section = ({ section, ledger }) => {\n  return (\n    <div className=\"section\">\n      <div className=\"sectionHeader\">{section.header}</div>\n      <div className=\"sectionQuestions\">\n        <Questions section={section} ledger={ledger} />\n      </div>\n    </div>\n  );\n};\n\nconst Questions = ({ section, ledger }) => {\n  return section.questions.map((question, key) => {\n    return (\n      <Question\n        key={key}\n        question={question}\n        choiceCount={section.choiceSet.length}\n        ledger={ledger}\n      />\n    );\n  });\n};\n\nconst Question = ({ question, choiceCount, ledger }) => {\n  return (\n    <div className=\"question\">\n      <div className=\"questionText\"> {question.text}</div>\n      <div className=\"questionChoices\" data-count={choiceCount}>\n        <Choices question={question} ledger={ledger} />\n      </div>\n    </div>\n  );\n};\n\nconst Choices = ({ question, ledger }) => {\n  const handleChange = useContext(DispatchContext);\n  return question.choices.map((choice, key) => {\n    const id = `${question.id}-${choice}`;\n    return (\n      <div className=\"questionChoice\" key={key}>\n        <input\n          type=\"radio\"\n          id={id}\n          name={question.id}\n          value={choice}\n          checked={ledger[question.id] === choice}\n          onChange={handleChange}\n        />\n        <label htmlFor={id}>{choice}</label>\n      </div>\n    );\n  });\n};\n\nconst Instructions = ({ card }) => {\n  return <div className=\"instructions\">{card.instructions}</div>;\n};\n\nconst Reference = ({ card }) => {\n  return (\n    <div className=\"reference\">\n      <a href={card.href}>Source PDF</a>\n    </div>\n  );\n};\n\nconst Title = ({ card }) => {\n  return (\n    <div className=\"title\">\n      <div className=\"titleText\">{card.title}</div>\n      <div className=\"titleNumber\">{card.number}</div>\n    </div>\n  );\n};\n\nexport default function({ state, onChange }) {\n  if (!state) {\n    return (\n      <div className=\"card\">\n        <Landing />\n      </div>\n    );\n  }\n\n  const { card, ledger } = state;\n\n  return (\n    <div className=\"card\">\n      <DispatchContext.Provider value={onChange}>\n        <Title card={card} />\n        <Instructions card={card} />\n        <Observable card={card} ledger={ledger} />\n        <Sections card={card} ledger={ledger} />\n        <Totals card={card} ledger={ledger} />\n        <Reference card={card} />\n      </DispatchContext.Provider>\n    </div>\n  );\n}\n","function buildFilename({ card, date, extension }) {\n  const name = card.name.replace(/ /gi, \"-\");\n  const year = date.getFullYear();\n  const month = `${date.getMonth() + 1}`;\n  const paddedMonth = month.length === 1 ? `0${month}` : month;\n  const day = `${date.getDate()}`;\n  const paddedDay = day.length === 1 ? `0${day}` : day;\n  return `equots-${year}-${paddedMonth}-${paddedDay}_${name}.${extension}`;\n}\n\nexport { buildFilename };\n","import { buildHTML } from \"./buildHTML\";\nimport { buildCSV } from \"./buildCSV\";\nimport { buildFilename } from \"./buildFilename\";\n\nfunction buildEML({ card, ledger }) {\n  const csvFilename = buildFilename({\n    card,\n    date: new Date(),\n    extension: \"csv\"\n  });\n\n  const eml = `\nSubject: QUOTS: ${card.name}\nX-Unsent: 1\nContent-Type: multipart/mixed; boundary=--boundary_text_string\n\nSee below for a copy of inspection results:\n\n----boundary_text_string\nContent-Type: text/html; charset=UTF-8\n\n${buildHTML({ card, ledger })}\n\n----boundary_text_string\nContent-Type: text/csv; charset=UTF-8; name=${csvFilename}\nContent-Disposition: attachment\n\n${buildCSV({ card, ledger })}\n\n----boundary_text_string--\n`;\n  return eml;\n}\n\nexport { buildEML };\n","import { computeTotals } from \"../compute\";\nimport Handlebars from \"handlebars\";\n\nfunction buildHTML({ card, ledger }) {\n  const definition = `\n  <html>\n  <head>\n    <style> td { border: 1px solid #444 } </style>\n  </head>\n  <body>\n  <h1>\n  {{card.observable }} : {{ledger.observable}}\n  </h1>\n  <table>\n  <thead>\n  <tr>\n  {{#each totalChoices}}\n  <th>\n  {{totalLabel .}}\n  </th>\n  {{/each}}\n  </tr>\n  </thead>\n  <tbody>\n  <tr>\n  {{#each totalChoices}}\n  <td>\n  {{totalValue .}}\n  </td>\n  {{/each}}\n  </tr>\n  </tbody>\n  </table>\n  {{#each card.sections}}\n  <table>\n  <thead>\n  <tr>\n    <th>{{header}}</th>\n    <th>Response</th>\n  </tr>\n  </thead>\n  <tbody>\n  {{#each questions}}\n  <tr>\n    <td>{{text}}</td>\n    <td>{{response id}}</td>\n  </tr>\n  {{/each}}\n  </tbody>\n  </table>\n  {{/each}}\n  </body>\n  </html>\n  `;\n\n  var template = Handlebars.compile(definition);\n  const totalChoices = [...card.sections[0].choiceSet, \"\"];\n  const totals = computeTotals({ card, ledger });\n\n  Handlebars.registerHelper(\"totalValue\", function(choice) {\n    const val = totals[choice];\n\n    switch (val) {\n      case undefined:\n        return 0;\n      default:\n        return val;\n    }\n  });\n\n  Handlebars.registerHelper(\"response\", function(id) {\n    return ledger[id];\n  });\n\n  Handlebars.registerHelper(\"totalLabel\", function(val) {\n    switch (val) {\n      case \"\":\n        return \"Unanswered\";\n      default:\n        return val;\n    }\n  });\n\n  const html = template({ card, ledger, totalChoices });\n\n  return html;\n}\n\nexport { buildHTML };\n","function buildCSV({ card, ledger }) {\n  const header = card.sections.reduce((acc, section) => {\n    return section.questions.reduce((acc, question) => {\n      return [...acc, `\"${question.text}\"`];\n    }, acc);\n  }, []);\n\n  const values = card.sections.reduce((acc, section) => {\n    return section.questions.reduce((acc, question) => {\n      return [...acc, ledger[question.id]];\n    }, acc);\n  }, []);\n\n  return [header.join(\",\"), values.join(\",\")].join(\"\\n\");\n}\n\nexport { buildCSV };\n","import React, { useEffect, useState } from \"react\";\nimport { upload, buildEML, buildFilename } from \"../../lib/export\";\nimport \"./style.css\";\n\nexport default function({ state, canRestore, doReset, doRestore }) {\n  const [active, setActive] = useState(false);\n\n  useEffect(() => {\n    if (state) {\n      const { ledger } = state;\n      const notEmpty = Object.values(ledger).some(val => val);\n      setActive(notEmpty);\n    } else {\n      setActive(false);\n    }\n  }, [state]);\n\n  const doExport = evt => {\n    const { card, ledger } = state;\n    const date = new Date();\n    const extension = \"eml\";\n    const filename = buildFilename({ card, date, extension });\n    const type = \"text/plain\";\n    const data = buildEML({ card, ledger });\n    upload({ data, filename, type });\n  };\n\n  const doPrint = evt => {\n    window.print();\n  };\n\n  const RestoreMode = () => {\n    return (\n      <div className=\"controls\">\n        <button disabled={true} onClick={doExport}>\n          Email\n        </button>\n        <button disabled={true} onClick={doPrint}>\n          Print\n        </button>\n        <button className=\"normal\" onClick={() => doRestore()}>\n          Undo\n        </button>\n      </div>\n    );\n  };\n\n  const NormalMode = () => {\n    return (\n      <div className=\"controls\">\n        <button disabled={false} className=\"normal\" onClick={doExport}>\n          Email\n        </button>\n        <button disabled={false} className=\"normal\" onClick={doPrint}>\n          Print\n        </button>\n        <button disabled={false} className=\"warning\" onClick={() => doReset()}>\n          Reset\n        </button>\n      </div>\n    );\n  };\n\n  const EmptyMode = () => {\n    return (\n      <div className=\"controls\">\n        <button disabled={true} onClick={doExport}>\n          Email\n        </button>\n        <button disabled={true} onClick={doPrint}>\n          Print\n        </button>\n        <button disabled={true} onClick={() => doReset()}>\n          reset\n        </button>\n      </div>\n    );\n  };\n\n  if (canRestore) {\n    return <RestoreMode />;\n  } else if (active) {\n    return <NormalMode />;\n  } else {\n    return <EmptyMode />;\n  }\n}\n","import { buildEML } from \"./buildEML\";\nimport { buildFilename } from \"./buildFilename\";\n\nfunction upload({ data, filename, type }) {\n  const blob = new Blob([data], { type });\n\n  if (window.navigator.msSaveOrOpenBlob) {\n    window.navigator.msSaveOrOpenBlob(blob, filename);\n  } else {\n    var elem = window.document.createElement(\"a\");\n    elem.href = window.URL.createObjectURL(blob);\n    elem.download = filename;\n    document.body.appendChild(elem);\n    elem.click();\n    document.body.removeChild(elem);\n  }\n}\n\nexport { upload, buildEML, buildFilename };\n","import React, { useState, useEffect } from \"react\";\n\nexport default function({ cards, onChanged }) {\n  const [selected, setSelected] = useState(\"none\");\n\n  useEffect(() => {\n    const template = cards.find(card => `${card.name}` === selected);\n    template ? onChanged(template) : onChanged(null);\n  }, [cards, selected, onChanged]);\n\n  const handleSelection = evt => {\n    const { value } = evt.currentTarget;\n    setSelected(value);\n  };\n\n  const Selector = ({ cards }) => {\n    return (\n      <select value={selected} onChange={handleSelection}>\n        <option value=\"none\">Select a card</option>\n        <SelectorItems cards={cards} />\n      </select>\n    );\n  };\n\n  const SelectorItems = ({ cards }) => {\n    return cards.map((card, key) => {\n      return (\n        <option key={key} value={card.name}>\n          {card.name}\n        </option>\n      );\n    });\n  };\n  if (cards) {\n    return <Selector cards={cards} />;\n  } else {\n    return <div>no cards</div>;\n  }\n}\n","function addIds(template) {\n  const toId = text =>\n    Array.from(text)\n      .map(ch => ch.toLowerCase())\n      .filter(ch => ch >= \"a\" && ch <= \"z\")\n      .join(\"\");\n\n  // Create a 'deep copy'\n  const copy = JSON.parse(JSON.stringify(template));\n\n  // Add id fields to the deep copy.\n  copy.sections.forEach(section => {\n    section.id = toId(section.header);\n    section.questions.forEach(question => {\n      question.id = Array.from(question.text)\n        .map(ch => ch.toLowerCase())\n        .filter(ch => ch >= \"a\" && ch <= \"z\")\n        .join(\"\");\n    });\n  });\n\n  return copy;\n}\n\nfunction makeLedger(template) {\n  const ledger = {};\n  template.sections.forEach(section => {\n    section.questions.forEach(question => {\n      ledger[question.id] = \"\";\n    });\n  });\n  ledger.observable = \"\";\n  return ledger;\n}\n\nfunction loadTemplate(template) {\n  const card = addIds(template);\n  const ledger = makeLedger(card);\n\n  return {\n    card,\n    ledger\n  };\n}\n\nexport { loadTemplate };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React, { useState, useEffect, useReducer } from \"react\";\nimport Card from \"./components/Card\";\nimport Exporter from \"./components/Exporter\";\nimport Selector from \"./components/Selector\";\nimport Templates from \"./data/Cards\";\nimport { loadTemplate } from \"./lib/loader\";\nimport \"./App.css\";\n\nexport default function App() {\n  const [template, setTemplate] = useState(null);\n  const [state, dispatch] = useReducer(reducer, null);\n\n  useEffect(() => {\n    if (template) {\n      dispatch({ type: \"initialize\", payload: { template } });\n    } else {\n      dispatch({ type: \"null\" });\n    }\n  }, [template]);\n\n  function reducer(state, action) {\n    switch (action.type) {\n      case \"change\": {\n        const { name, value } = action.payload;\n        const ledger = { ...state.ledger, [name]: value };\n        const card = { ...state.card };\n        return { card, ledger, cache: null };\n      }\n      case \"initialize\": {\n        const { template } = action.payload;\n        const { card, ledger } = loadTemplate(template);\n        return { card, ledger, cache: null };\n      }\n      case \"reset\": {\n        const { template } = action.payload;\n        const cache = { ...state.ledger };\n        const { card, ledger } = loadTemplate(template);\n        return { card, ledger, cache };\n      }\n      case \"undo\": {\n        const card = { ...state.card };\n        const ledger = { ...state.cache };\n        return { card, ledger, cache: null };\n      }\n      case \"null\": {\n        return null;\n      }\n      default: {\n        console.error(\n          `Unhandled reducer action.type: \"${action.type}\". Full action object is:`,\n          action\n        );\n        return undefined;\n      }\n    }\n  }\n\n  function changeLedger(evt) {\n    const { name, value } = evt.currentTarget;\n    dispatch({ type: \"change\", payload: { name, value } });\n  }\n\n  function resetLedger() {\n    dispatch({ type: \"reset\", payload: { template } });\n  }\n\n  function restoreLedger() {\n    dispatch({ type: \"undo\" });\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"header\">\n        <Selector cards={Templates.cards} onChanged={setTemplate} />\n        <Exporter\n          state={state}\n          canRestore={state && state.cache !== null}\n          doReset={resetLedger}\n          doRestore={restoreLedger}\n        />\n      </div>\n      <Card state={state} onChange={changeLedger} />\n    </div>\n  );\n}\n"],"sourceRoot":""}